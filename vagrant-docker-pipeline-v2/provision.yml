- hosts: all
  become: yes

  vars:
      docker_apps_location: /usr/local/opt/
  pre_tasks:
    - name: Update and upgrade apt packages
      become: true
      apt:
        # upgrade: yes
        update_cache: yes
        cache_valid_time: 86400 #One day  
  roles:
    - geerlingguy.docker

  tasks:
    - name: Add Ansible inventory mappings to /etc/hosts
      become: true
      blockinfile:
        path: /etc/hosts
        block: |
          {% for host in groups['registry'] %}
          {{ host }} registry
          {% endfor %}    
      tags: infra_ready
      
    - name: Copy docker daemon json  to server.
      copy: src=templates/docker_daemon.json dest=/etc/docker/daemon.json
      tags: registry_ready

    - name: Restart service docker, in all cases
      service:
        name: docker
        state: restarted
      tags: registry_ready
    
- hosts: registry
  become: yes
  tasks:

    - name: Chec if  registry is running
      shell: docker ps | grep registry
      register: registry_exists
      tags: docker_start_registry  
      ignore_errors: True


    - name: debug if registry running
      debug: 
        var: registry_exists.rc
      tags: docker_start_registry  


    - name: Start registry
      shell: docker run -d -p 5000:5000 --restart=always --name registry registry:2
      when: registry_exists.rc == 1
      tags: docker_start_registry  

- hosts: dev
  become: yes

  vars:
      docker_apps_location: /usr/local/opt/docker
  roles:
    - geerlingguy.git    
  tasks:

    - name: Ensure app folder exists.
      file: "path={{ docker_apps_location }} state=directory"      
    - name: Checkout source
      git:
        repo: 'https://github.com/pilgrim2go/node-multistage-docker'
        dest: "{{ docker_apps_location }}"
      tags: docker_build_run  

    - name: Run `docker-compose up` build
      command: /usr/local/bin/docker-compose build app
      args:
        chdir: "{{ docker_apps_location }}"        
      register: output
      tags: docker_build_run  

    - debug:
        var: output

    - name: Run `docker-compose up` up
      command: /usr/local/bin/docker-compose up -d
      args:
        chdir: "{{ docker_apps_location }}"        
      register: output
      tags: docker_build_run  

    - debug:
        var: output
    - name: Wait for port 4002 to become open on the host, don't start checking for 10 seconds
      wait_for:
        port: 4002
        delay: 10        
      tags: docker_build_run  

    - name: Using curl to connect to a host port 4002 . Ordinarily this would throw a warning.
      shell: curl  localhost:4002
      args:
        warn: no
      register: output
      tags: docker_build_run  

    - debug:
        var: output.stdout
      tags: docker_build_run  

    - name: get git version
      shell: git rev-parse --short=4 HEAD
      args:
        chdir: "{{ docker_apps_location }}"      
      tags: 
        - docker_tag  
        - docker_push

      register: git_version
    - debug:
        var: git_version.stdout
      tags: 
        - docker_tag  
        - docker_push

    - name: tag image by commit "{{ git_version.stdout }}"
      shell: docker tag pilgrim2go/node-multistage-docker:latest registry:5000/pilgrim2go/node-multistage-docker:"{{ git_version.stdout }}"
      tags: 
        - docker_tag  
        - docker_push
    - name: tag image by latest
      shell: docker tag pilgrim2go/node-multistage-docker:latest registry:5000/pilgrim2go/node-multistage-docker:latest
      tags: 
        - docker_tag  
        - docker_push

    - name: push  image  to local registry
      shell: docker push registry:5000/pilgrim2go/node-multistage-docker:"{{ git_version.stdout }}"
      tags: docker_push  
    - name: push  image  to local registry
      shell: docker push registry:5000/pilgrim2go/node-multistage-docker:latest
      tags: docker_push  






- hosts: prod
  become: yes
  vars:
      docker_apps_location: /usr/local/opt/

  tasks:

    - name: Ensure app folder exists.
      file: "path={{ docker_apps_location }} state=directory"      
      tags: docker_prod  

    - name: Copy docker daemon json  to server.
      copy: src=templates/docker-compose.prod.yml dest="{{ docker_apps_location }}"
      tags: docker_prod  
    - name: Run `docker-compose pull` to get latest app version
      command: /usr/local/bin/docker-compose -f docker-compose.prod.yml pull app
      args:
        chdir: "{{ docker_apps_location }}"        
      tags: docker_prod  


    - name: Run `docker-compose up` up
      command: /usr/local/bin/docker-compose -f docker-compose.prod.yml up -d
      args:
        chdir: "{{ docker_apps_location }}"        
      tags: docker_prod  

    - name: Wait for port 4002 to become open on the host, don't start checking for 10 seconds
      wait_for:
        port: 4002
        delay: 10        
      tags: docker_prod  

    - name: Using curl to connect to a host port 4002 . Ordinarily this would throw a warning.
      shell: curl  localhost:4002
      args:
        warn: no
      register: output
      tags: docker_prod  

    - debug:
        var: output.stdout
      tags: docker_prod  

